# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on: [push]
#on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#         python-version: [3.6, 3.7, 3.8]
    strategy:
      matrix:
        - python-version: 3.7
          env:
           - COVERAGE_RUN='coverage run'
           - CODECOV='codecov'
           - NUMPY='numpy scipy matplotlib h5py vtk pyqt5 pandas>=0.25 imageio pillow>5.2,!=7.1.0'
           - LIB='libblas-dev liblapack-dev'

        - python-version: 3.8
           - COVERAGE_RUN='coverage run'
           - CODECOV='codecov'
           - NUMPY='numpy scipy matplotlib h5py vtk pyqt5 pandas>=0.25 imageio pillow>5.2,!=7.1.0'
           - LIB='libblas-dev liblapack-dev'
        
          

    #--------------------------------------------------------------------------------------------------
    # latest versions of package
    - name: "Python  ${{ matrix.python-version }} (PyQt5)"
      python-version: [3.7, 3.8, 3.9]
      #env:
      #- COVERAGE_RUN='coverage run'
      #- CODECOV='codecov'
      #- NUMPY='numpy scipy matplotlib h5py vtk pyqt5 pandas>=0.25 imageio pillow>5.2,!=7.1.0'
      ##- LIB='libblas-dev liblapack-dev'
      #- LIBH5='libhdf5-dev'
    #--------------------------------------------------------------------------------------------------
    # oldest versions of package
    #--------------------------------------------------------------------------------------------------

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
         python -m pip install --upgrade pip
         pip install flake8
         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

#--------------------------------------------------------------------------------------------------
# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python
# name: Python package
# 
# on: [push]
# 
# jobs:
#   build:
# 
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: [2.7, 3.5, 3.6, 3.7, 3.8]

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
